version: "3.8"
services:
  # The database service
  db:
    # Using the postgreSQL official image
    image: postgres
    # Rename it postgres to avoid being named 'db-1'
    container_name: postgres
    # Define every required environment variables
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    # Create a volume to persist database data
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Link the network to the container
    networks:
      - backend
    # Always restart the database if it ever goes down
    restart: always
  # The app service
  jizo:
    # Rename it jizo to avoir being named `jizo-1`
    container_name: jizo
    # Point to the dev.Dockerfile used for the build
    build:
      # dev.Dockerfile which is located in the same directory as the docker-compose.yaml
      context: .
      dockerfile: docker/dev.Dockerfile
    # Exposing ports
    ports:
      - "9999:8000"
    # Mount the volume
    volumes:
      - .:/jizo
      - static_volume:/home/src/app/web/staticfiles
    # Command used to run the server
    command:
      python manage.py runserver 0.0.0.0:8000
    # Cannot be launched without the db service fully working
    depends_on:
      - db
      - elastic
      - kibana
    # Link the network to the container
    networks:
      - backend
    # Set the type of logging
    logging:
      driver: "json-file"
    # Declare variable that will be used in the container
    environment:
      - LOGSTASH_HOST=logstash
    # Hot reload (does not work, gotta work on it)
    restart: always

  # data indexer
  elastic:
    environment:
      # Remove the loggin form
      # NOT SECURE, OK in DEV but not in PROD env
      xpack.security.enabled: false
      # type of cluster
      discovery.type: single-node
      # Heap Size
      # Should not be overriden as followed in production
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    image: elasticsearch:8.9.0
    # Rename the container
    container_name: elastic
    # Persist data in volume
    volumes:
      -  elastic_data:/home/src/app/elasticsearch/data/
    # Bind ports
    ports:
      - "9200:9200"
    # Link container to a network
    networks:
      - elk

  # Log collector
  logstash:
    image: logstash:8.9.0
    # Rename the container
    container_name: logstash
    # Persist data in volume
    volumes:
      - ./logstash/logstash.conf:/logstash_dir/logstash.conf
    # Set a command for logstash to read config file
    command: logstash -f /logstash_dir/logstash.conf
    # Set the dependence to elastic container
    depends_on:
      - elastic
    # Bind ports
    ports:
      - "5959:5959"
    # Link container to a network
    networks:
      - elk

  # Dashboard / UI to visualize logs
  kibana:
    image: kibana:8.9.0
    # Rename the container
    container_name: kibana
    # Bind ports
    ports:
      - "5601:5601"
    # Set the dependence to elastic container
    depends_on:
      - elastic
    # Link container to a network
    networks:
      - elk
    # Declare variable that will be used in the container
    environment:
      - ELASTICSEARCH_URL=http://elastic:9200

  # Log centralizer
  filebeat:
    # Rename the container
    container_name: filebeat
    image: filebeat:latest
    # Set a user as root since this is the role privilege needed to make it work
    user: root
    # The folder where is located its Dockerfile
    build:
      context: .
      dockerfile: filebeat/Dockerfile
      # Send an argument its Dockerfile needs
      args:
        ELASTIC_VERSION: 8.9.1
    # Persist data in volume
    volumes:
      # Type of bind
      - ./filebeat/filebeat.yaml:/usr/share/filebeat/filebeat.yaml:ro
      - logs_volume:/home/src/app/logs
      # Another way to define a bind
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    # Command that tells filebeat which file it should use as config
    command: filebeat -e -c /usr/share/filebeat/filebeat.yaml -strict.perms=false
    # Dependencies
    depends_on:
      - jizo
      - elastic
      - kibana
    # Link container to a network
    networks:
      - elk
# List of named volumes
# Allow to persist the volume even if the containers are down
volumes:
  pgdata:
  static_volume:
  elastic_data:
  logs_volume:
# List of networks
networks:
  backend:
  elk: