version: "3.8"
services:
  # The database service
  db:
    # Using the postgreSQL official image
    image: postgres
    # Rename it postgres to avoid being named 'db-1'
    container_name: postgres_dev
    # Define every required environment variables
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    # Create a volume to persist database data
    volumes:
      - pgdata:/var/lib/postgresql/data/
    # Link the network to the container
    networks:
      - backend
    # Always restart the database if it ever goes down
    restart: always

  # The app service
  jizo:
    # Rename it jizo to avoir being named `jizo-1`
    container_name: jizo_dev
    # Point to the dev.Dockerfile used for the build
    build:
      # dev.Dockerfile which is located in the same directory as the docker-compose.yaml
      context: .
      dockerfile: docker/dev.Dockerfile
    # Exposing ports
    ports:
      - "8008:8000"
    # Mount the volume
    volumes:
      - .:/usr/src
      - static_volume:/home/src/app/web/staticfiles
    # Cannot be launched without the db service fully working
    depends_on:
      - db
    # Link the network to the container
    networks:
      - backend
    # Hot reload (does not work, gotta work on it)
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`jizo.dev`)"
    tty: true

  traefik: # new
    image: traefik:v2.10
    container_name: traefik_dev
    ports:
      - "8000:80"
      - "8081:8080"
    volumes:
      - "./docker/traefik/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  pg-admin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      - backend
# List of named volumes
# Allow to persist the volume even if the containers are down
volumes:
  pgdata:
  static_volume:
  pgadmindata:
# List of networks
networks:
  backend:
