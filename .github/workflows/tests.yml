name: Run tests and linting
on: [pull_request]
jobs:
  tests:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
        database-engine: ["postgres"]
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables from secret
        run: |
          echo "$ENV_FILE_CONTENT" > .env
          source .env
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install requirements
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Prepare postgres database
        run: |
          psql -c 'CREATE DATABASE "db_jizo";' -h localhost -U postgres
        if: matrix.database-engine == 'postgres'

      - name: Run tests
        run: |
          source .venv/bin/activate
          export DJANGO_SETTINGS_MODULE=app.settings
          coverage run manage.py test
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}