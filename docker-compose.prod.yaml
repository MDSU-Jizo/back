version: "3.8"
services:
  # The database service
  db:
    # Using the postgreSQL official image
    image: postgres
    # Rename it postgres to avoid being named 'db-1'
    container_name: postgres
    env_file:
      - .env
    # Define every required environment variables
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
    # Create a volume to persist database data
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Link the network to the container
    networks:
      - backend
  # The app service
  jizo:
    # Rename it jizo to avoir being named `jizo-1`
    container_name: jizo
    image: jizo_backend
    # Point to the dev.Dockerfile used for the build
    build:
      # dev.Dockerfile which is located in the same directory as the docker-compose.yaml
      context: .
      dockerfile: docker/prod.Dockerfile
    # Exposing ports
    expose:
      - 80
    # Mount the volume
    volumes:
      - .:/jizo
      - static_volume:/home/app/web/staticfiles
    # Command used to run the server
    command:
      gunicorn app.wsgi:application --bind 0.0.0.0:8000
    # Cannot be launched without the db service fully working
    depends_on:
      - db
    # Link the network to the container
    networks:
      - backend
  nginx:
    container_name: nginx
    image: jizo_nginx
    build: ./nginx
    volumes:
      - static_volume:/home/src/app/web/staticfiles
    ports:
      - "8000:80"
    depends_on:
      - jizo
    networks:
      - backend
# List of named volumes
volumes:
  pgdata:
  static_volume:
# List of networks
networks:
  backend: